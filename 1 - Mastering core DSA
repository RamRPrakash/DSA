ðŸ“Œ Phase 1: Mastering Core DSA (Weeks 1-12)
ðŸŽ¯ Goal: Build strong problem-solving skills & crack medium-level coding problems.

ðŸ—“ Week 1-2: Complexity Analysis, Arrays & Strings
Day 1-2: Big-O Notation, Time & Space Complexity
Day 3-5: Arrays (Two Pointers, Sliding Window, Prefix Sum)
Day 6-7: Strings (Anagrams, Substrings, Palindromes)
Leetcode: 10-15 Problems
ðŸ—“ Week 3-4: Recursion & Backtracking
Day 1-3: Basics of Recursion & Base Cases
Day 4-5: Backtracking (N-Queens, Subsets, Word Search)
Day 6-7: Advanced Recursion (Sudoku Solver, Rat in Maze)
Leetcode: 10-15 Problems
ðŸ—“ Week 5-6: Linked Lists & Stacks/Queues
Day 1-3: Linked List (Reversal, Cycle Detection, Merge Sort)
Day 4-5: Stacks & Queues (Monotonic Stack, Min Stack, LRU Cache)
Day 6-7: Priority Queue & Heap (Top K Elements, Merge Sorted Lists)
Leetcode: 15-20 Problems
ðŸ—“ Week 7-8: Binary Trees & BST
Day 1-3: Binary Tree Traversals (DFS, BFS)
Day 4-5: Binary Search Trees (LCA, Range Queries, AVL Trees)
Day 6-7: Diameter of Tree, Morris Traversal
Leetcode: 15-20 Problems
ðŸ—“ Week 9-10: Searching & Sorting Algorithms
Day 1-2: Binary Search & Variants (Rotated Array, Lower Bound)
Day 3-4: Merge Sort, Quick Sort, Bucket Sort
Day 5-6: Heap Sort, Counting Sort
Leetcode: 15-20 Problems
ðŸ—“ Week 11-12: Hashing, Sliding Window & Miscellaneous
Day 1-2: HashMap & HashSet (Substring Problems)
Day 3-4: Sliding Window (Max Subarray, Longest Substring)
Day 5-6: Revision & Mock Tests
Leetcode: 20 Problems
ðŸ”¥ End of Phase 1: You should now be able to solve most medium-level problems easily.
